#version 450

layout(set=1, binding = 1) uniform cameraUniform {
  mat4 view;
  mat4 proj;
  float nearClip;
  float farClip;
} _MainCamera;

struct Vertex {
  vec3 position;
  vec3 colour;
  vec2 texCoord;
};

layout(std140, binding = 0) readonly buffer Vertices {
   Vertex vertices[];
};
layout(std140, binding = 1) readonly buffer Indices {
   uint indices[];
};

layout(binding = 2, rgba8) uniform image2D frameBuffer;
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

void main() {
  vec4 offset = _MainCamera.view * vec4(gl_GlobalInvocationID.xy / 800.0,0.0, 1.0);
  vec4 pixel = vec4(offset.xyz, 1.0);
  imageStore(frameBuffer, ivec2(gl_GlobalInvocationID.xy), pixel);
}
